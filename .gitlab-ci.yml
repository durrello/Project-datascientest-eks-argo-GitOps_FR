stages:
  - validate
  - security
  - plan
  - apply

variables:
  TF_ROOT: "Livrables/EKS-TF"
  GIT_SUBMODULE_STRATEGY: recursive

default:
  image: alpine:3.18
  before_script:
    - apk add --no-cache bash curl unzip
    - curl -fsSL https://releases.hashicorp.com/terraform/1.6.6/terraform_1.6.6_linux_amd64.zip -o terraform.zip
    - unzip terraform.zip -d /usr/local/bin/

# -----------------
# 1. Terraform validate
# -----------------
terraform:validate:
  stage: validate
  script:
    - cd $TF_ROOT
    - terraform init -backend=false
    - terraform validate

# -----------------
# 2. Security Scan with Trivy
# -----------------
terraform:security-scan:
  stage: security
  image: aquasec/trivy:latest   # override image here
  script:
    - cd $TF_ROOT
    - trivy config . --exit-code 1 --severity HIGH,CRITICAL || echo "⚠️ Security issues found"

# -----------------
# 3. Terraform Plan
# -----------------
terraform:plan:
  stage: plan
  script:
    - cd $TF_ROOT
    - terraform init
    - terraform plan -out=tfplan
  artifacts:
    paths:
      - $TF_ROOT/tfplan

# -----------------
# 4. Terraform Apply (manual)
# -----------------
terraform:apply:
  stage: apply
  script:
    - cd $TF_ROOT
    - terraform apply -auto-approve tfplan
  when: manual
  dependencies:
    - terraform:plan

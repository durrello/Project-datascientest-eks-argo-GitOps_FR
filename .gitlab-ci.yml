stages:
  - validate
  - security
  - plan
  - apply

variables:
  TF_ROOT: "Livrables/EKS-TF"   # ✅ Update this path if your repo uses a different folder
  GIT_SUBMODULE_STRATEGY: recursive   # ✅ Ensures Terraform modules & aws-auth are pulled

# -----------------
# 1. Terraform validate
# -----------------
terraform:validate:
  stage: validate
  image: hashicorp/terraform:1.6.6
  script:
    - cd $TF_ROOT
    - terraform init -backend=false
    - terraform validate

# -----------------
# 2. Security Scan with Trivy
# -----------------
terraform:security-scan:
  stage: security
  image: aquasec/trivy:latest
  script:
    - cd $TF_ROOT
    # ✅ Correct Trivy usage (scans Terraform configs for misconfigs)
    - trivy config . --exit-code 1 --severity HIGH,CRITICAL || echo "⚠️ Security issues found - review before proceeding"

# -----------------
# 3. Terraform Plan
# -----------------
terraform:plan:
  stage: plan
  image: hashicorp/terraform:1.6.6
  script:
    - cd $TF_ROOT
    - terraform init
    - terraform plan -out=tfplan
  artifacts:
    paths:
      - $TF_ROOT/tfplan

# -----------------
# 4. Terraform Apply (manual)
# -----------------
terraform:apply:
  stage: apply
  image: hashicorp/terraform:1.6.6
  script:
    - cd $TF_ROOT
    - terraform apply -auto-approve tfplan
  when: manual
  dependencies:
    - terraform:plan

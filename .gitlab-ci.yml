# .gitlab-ci.yml
stages:
  - validate
  - plan
  - deploy

variables:
  TERRAFORM_VERSION: "1.5.7"
  TF_ROOT: "infrastructure/terraform"  # Change this to your terraform directory
  TF_STATE_NAME: "default"
  AWS_DEFAULT_REGION: "us-east-1"      # Change to your preferred region
  TF_CLI_CONFIG_FILE: "/tmp/.terraformrc"

# Use official terraform image
image:
  name: hashicorp/terraform:$TERRAFORM_VERSION
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

before_script:
  - cd $TF_ROOT
  - terraform --version
  # Setup Terraform Cloud credentials if using Terraform Cloud
  - |
    if [ ! -z "$TF_API_TOKEN" ]; then
      echo "Setting up Terraform Cloud credentials..."
      mkdir -p ~/.terraform.d
      echo "credentials \"app.terraform.io\" { token = \"$TF_API_TOKEN\" }" > ~/.terraform.d/credentials.tfrc.json
      echo 'credentials "app.terraform.io" { token = "'$TF_API_TOKEN'" }' > /tmp/.terraformrc
    fi
  # Initialize with backend configuration
  - terraform init -backend=true

# Validate terraform configuration
terraform:validate:
  stage: validate
  script:
    - terraform validate
  only:
    - branches

# Plan terraform changes
terraform:plan:
  stage: plan
  script:
    - terraform plan -out="planfile"
  artifacts:
    paths:
      - $TF_ROOT/planfile
    expire_in: 1 week
  only:
    - branches

# Apply terraform changes (only on main/master branch)
terraform:apply:
  stage: deploy
  script:
    - terraform apply -input=false "planfile"
  dependencies:
    - terraform:plan
  only:
    - main
    - master
  when: manual  # Require manual approval for deployment

# Optional: Destroy infrastructure (manual trigger only)
terraform:destroy:
  stage: deploy
  script:
    - terraform destroy -auto-approve
  only:
    - main
    - master
  when: manual
  allow_failure: false